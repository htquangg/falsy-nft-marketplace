# Default values for graphql-mesh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# mountConfigMap:
#   # mount and mountConfigMap cannot include the same file name.
#   .meshrc.yaml: graphql-mesh-meshrc
#   example-query.graphql: graphql-mesh-meshrc
#   init.sh: graphql-mesh-init-sh

# mount:
#   # mount and mountConfigMap cannot include the same file name.
#   .meshrc.yaml: |-
#     sources:
#       - name: Wiki
#         handler:
#           openapi:
#             source: https://ghibliapi.herokuapp.com/swagger.yaml
#   example-query.graphql: |-
#     query {
#       getFilms(limit: 30) {
#         title
#         description
#       }
#     }
#   init.sh: |-
#     #!/bin/bash
#     echo "test"

replicaCount: 1

image:
  repository: hiroyukiosaki/graphql-mesh
  pullPolicy: IfNotPresent
  tag: "latest-all-alpine"
  # tag: "latest" # to simple image

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80
  annotations: {}
    # sidecar.istio.io/inject: "false"

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: graphql-mesh.127.0.0.1.xip.io
      paths: ["/"]
  tls: []
  #  - secretName: graphql-mesh-tls
  #    hosts:
  #      - graphql-mesh.local

# # For debugging, change startup command here.
# command: 
# - /bin/bash
# - -c
# - sleep 3600

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

initialDelaySeconds: 30
