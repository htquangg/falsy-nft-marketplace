apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphql-mesh.fullname" . }}
  labels:
    {{- include "graphql-mesh.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "graphql-mesh.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "graphql-mesh.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graphql-mesh.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- with .Values.mountConfigMap }}
          {{- range $file, $configMap := . }}
          - mountPath: "/work/{{ $file }}"
            name: {{ $configMap }}
            subPath: {{ $file }}
          {{- end }}
          {{- end }}
          {{- with .Values.mount }}
          {{- range $file := keys . }}
          - mountPath: "/work/{{ $file }}"
            name: raw-files
            subPath: {{ $file }}
          {{- end }}
          {{- end }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12}}
          {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- with .Values.mountConfigMap }}
        {{- range $configMap := values . | uniq }}
        - name: {{ $configMap }}
          configMap:
            name: {{ $configMap }}
        {{- end }}
      {{- end }}
      {{- if .Values.mount }}
        - name: raw-files
          configMap:
            name: {{ include "graphql-mesh.fullname" . }}-raw-files
      {{- end }}